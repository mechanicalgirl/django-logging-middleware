Logging middleware provides a framework log handler to output to a log file:
 - on the same level as your project
 - into a directory called 'logs'
 - to a file called DATABASE_NAME.log (where DATABASE_NAME is the value from project settings)

In debug mode, the logger captures anything of logging.DEBUG and greater.  (This value is configurable in project settings via LOGGING_LEVEL.)

When the project is running in DEBUG mode, the following values are logged by defaultt:

1. Request url, IP address and GET or POST vars

2. Every SQL request, its type and duration

3. Name of each view function called and its duration (using the logging_decorator)

4. Every exception encountered, including the stack trace and exception message

5. A summary of:
 - total request time
 - number of requests per second
 - number of view functions called and what percentage of processing time they took
 - number of SQL calls, their duration and percentage of overall processing time
 - response status code and full URL to the page that was requested

Additionally, to use the logger from anywhere in a project, just:

    import logging

and make calls anywhere in your code like:

    logging.debug('something %s' %somevar)

    logging.warn()

If debug is set to false, the default logging level is logging.WARNING and greater.

Only the initial request and processing time are logged on each request, except in the case of an exception, in which the stack trace and full request params are logged for debugging purposes.

